exit
next
table
rows
puts table
exit
rows.class
rows
para
exit
para
exit
ecit
@recipebook[0]['name']
@recipebook[0].keys
@recipebook[0].length
@recipebook[0].class
@recipebook.class[0]
@recipebook.class
exit
rows[0][0]
rows[0]
rows.class
rows.length
rows
exit
JSON.parse(@recipebook)
@recipebook.class
rows
exit
require 'ostruct'
@recipebook[0].keys
@recipebook.class
rows.class
exit
ver = @recipebook.map{|hash|hash.map|keys,values|[keys,values]}}
@recipebook[0].class
@recipebook.class
@recipebook
@recipebook[0].class
@recipebook.length
@recipebook.leength
@recipebook.class
rows
exit
rec.class
rec
rows
exit
re.length
re.class
re
rec.class
rec
exit
rec.class
re.class
rec
re
exit
re
next
exit
next
continue
terminal_table
next
@recipebook[0].class
@recipebook.length
@recipebook.class
exit
@recipebook
exit
JSON.parse(File.read(RECIPES_PATH))
File.read(RECIPES_PATH)
exit
@results.map{|k,v|v[0]}.class
@results.map{|k,v|v[0].class}
@results.map{|k,v|k[0].class}
@results.class
@results
select_recipe(3).class
select_recipe(3).length
read_recipes
write_recipes
write_reecipes
@results.keys
@results.length.keys
@results.length
@results
exit
select_recipe(-1).class
select_recipe(-1).keys
select_recipe(-1).length
select_recipe(-1)
write_recipes
@results.values
@results.keys
@results.length
@results.class
@results
exit
@results
exit
rows
exit
@recipebook.select_recipe(2).each do |rec| rec.class end 
@recipebook.select_recipe(2).each do |rec| rec.to_a end
@recipebook.select_recipe(2).each do |rec|
@recipebook.select_recipe(2).class
@recipebook.class
rows
rec
exit
@recipebook.select_recipe(1)
@recipebook
display_menu.value
continue
@recipebook.select_recipe(2)
@recipebook.select_recipe(3)
@recipebook.read_recipes
@recipebook.length
@recipebook.class
continue
next
read_recipes
file_hash
exit
display_menu
exit
display_menu
next
display_menu
exit
welcome_text
exit
@results
6.times do next end
exit
read_recipes
write_recipes
@results
next
@results
next
@results
next
@results
next
@results
next
@results
next
@results
exit
exitt
content[0]["extendedIngredients"].map{|s|s["originalString"]}
write_recipes
content
exit
JSON.parse(Faraday.get("https://api.spoonacular.com/recipes/random?apiKey=945916246cc3460dbfe56c71616e4d96").body)['recipes']
JSON.parse(Faraday.get("#{@api_root}/recipes/random#{@api_key}").body)
JSON.parse(Faraday.get("https://api.spoonacular.com/recipes/random?apiKey=945916246cc3460dbfe56c71616e4d96").body)
JSON.parse(Faraday.get("https://api.spoonacular.com/recipes/complexSearch?apiKey=945916246cc3460dbfe56c71616e4d96&query=fish").body).values[2]
JSON.parse(Faraday.get("#{@api_root}/recipes/random#{@api_key}").body)
parsed_hash
search_api_recipes
serch_api_recipes
k
v
r
next
k
r
next
r
exit
k
#{v}
v
exit
file_hash [0]
file_hash.class
exit
@file
read_recipes.class
@book.class
exit
JSON.parse(file)[0].values
file.class
exit
@book
exit
file.class
file
@book
exit
file.class
read_recipes
reac_recipes
@book
exit
JSON.parse(file).map{|reec|reec.keys}
Json.parse(file)
@book
exit
self.read_recipes
@book
exit
@book
@file_hash
exit
JSON.parse(file)
file
file.class
@files_hash.class
exit
JSON.parse(File.read("../public/recipes.json"))
@file_hash.class
@book
exit
@file_hash
exit
@file_hash
@book.class
exit
@book.class
exit
@book
exit
@book
exit
self.read_recipes
file
@book.class
exit
@results.to_h
exit
x = 0
i = 0x = 0
exit
JSON.parse(file)
file
@recipes
@book
read_recipes
exit
read_recipes.each{|x|x.select{|y|y['name']}}
exit
end
@results
self.read_recipies
read_recipes
read_recipes[0]
exit
read_recipes
