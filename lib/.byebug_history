exit
@results.to_h
exit
x = 0
i = 0x = 0
exit
JSON.parse(file)
file
@recipes
@book
read_recipes
exit
read_recipes.each{|x|x.select{|y|y['name']}}
exit
end
@results
self.read_recipies
read_recipes
read_recipes[0]
exit
read_recipes
exit
read_recipes
exit
self.titles
titles
title
exit
@file_hash['serves']
@files_hash
titles
exit
@file_hash[1]['serves']
read_recipes[0][1]['name']
c.length
c.class
c = read_recipes.map{|x|x.select{|k,v|k}}
c.class
c = read_recipes.map{|x|x.select{|k,v|k}}
temp.map{|x|x.select{|g|g.class}}
temp.length
temp.class
exit
p var
var
exit
read_recipes.map{|x|x.each{|y|y}
c = read_recipes.map{|x|x.map{|y| y }})
read_recipes.map{|x|x.map{|y|if y.include?('name') ? y : next }}
z.keys
read_recipes.map{|x|x.map{|y| y }}
z.keys
read_recipes.map{|x|x}
y.keys
z = y.each{|x|x.to_h}
y.to_h
y = read_recipes.each{|x,y|x}
y.values
y.keys
y .class
y = read_recipes.each{|x,y|x}
y
y = read_recipes[0].each{|x,y|x}
p var
exit
p var
var.class
var.length
var
exit
var[0]
var.length
var.class
var
exit
x.class
x= JSON.parse(c)
c.class
x= JSON.parse(c)
c = read_recipes.to_s
JSON.parse(read_recipes)
c = read_recipes.to_s
JSON.parse(read_recipes)
hash2= read_recipes.map{|re|re.map|k,v|k.class}}
hash.class
@file_hash.class
hash = read_recipes.map do | l| l.class end
read_recipes.length
exit
titles
exit
titles.class
titles
exit
g.length
g.class
g = read_recipes.map{|a|a.to_h}
joe.class
joe
joe = hello.map{|k|k.values}
hello.length
hello = read_recipes.map{|rec|rec.to_h}
q.length
q.class
p q
q
q["recipe"]=z[0][2]
q={}
z[0][2]
z = JSON.parse(x)
x = t.to_s
JSON.parse(t)
x = t.to_s
JSON.parse(t)
t.length
t = titles.each{|s|s}
titles.length
titles.class
exit
file
exit
file
exit
read_recipes
file
file_hash
request.title
exit
@book
exit
test.class
test
@book
exit
@book
exit
@book
exit
@book
exit
@@book
exit
@book
exit
file
@book
exit
request.read_recipes.map{|recipe|recipe['name']}
exit
request.write_recipes
request.read_recipes
request.search
exit
@results
exit
@results.class
JSON.pretty_generate(@results)
file
@results
next
file.class
file
file_hash
continue
@temp
@temp.class
continue
temp
continue
@results[:name]
@results[:recipe]
continue
@results[:recipe]
continue
@results
continue
@results
continue
@results[:recipe]
continue
@results
continue
@results[:recipe]
exit
@results
exit
end
continue
exit
@results
exit
parsed_hash
exit
@json_string.to_hash
@json_hash
parsed_hash
exit
@results
exit
@json_string.class
json_string.class
@results
